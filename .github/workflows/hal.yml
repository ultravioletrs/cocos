name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Update Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get upgrade -y
    
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.x
        cache-dependency-path: "go.sum"

    - name: Checkout cocos
      uses: actions/checkout@v4
      with:
        repository: 'ultravioletrs/cocos'
        path: cocos

    - name: Checkout buildroot
      uses: actions/checkout@v4
      with:
        repository: 'buildroot/buildroot'
        path: buildroot

    - name: Build
      run: |
        cd buildroot
        make BR2_EXTERNAL=../cocos/hal/linux cocos_defconfig
        make

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-kernel
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./buildroot/output/images/bzImage
        asset_name: bzImage
        asset_content_type: application/octet-stream

    - name: Upload Release Asset
      id: upload-release-rootfs
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./buildroot/output/images/rootfs.cpio.gz
        asset_name: rootfs.cpio.gz
        asset_content_type: application/gzip
